name: CI Pipelines

on:
  push:
    branches:
      - main
permissions:
  contents: write # Required to push changes to the repository
env:
  DOCKER_USERNAME: sandhya0593 # Docker Hub username
  DOCKER_REPO: starbuck # Docker Hub repository name
  SONAR_PROJECT_KEY: starbuck # SonarQube project key
  SONAR_HOST_URL: http://3.84.169.175:9000
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # SonarQube authentication token
  KUBERNETES_DEPLOYMENT_FILE: k8s/deployment.yml # Kubernetes deployment file path

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      
          

      # Step 4: Build Docker image with a unique tag
      - name: Build Docker Image
        run: |
          export IMAGE_TAG=${{ github.sha }}
          docker build -t $DOCKER_USERNAME/$DOCKER_REPO:$IMAGE_TAG .
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # Step 5: Install Trivy and scan Docker image
      - name: Install and Scan Docker Image with Trivy
        run: |
          # Install the latest version of Trivy
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          export PATH=$PATH:$(pwd)/bin
          # Scan the Docker image
          trivy image --exit-code 0 --severity HIGH,CRITICAL $DOCKER_USERNAME/$DOCKER_REPO:$IMAGE_TAG

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u $DOCKER_USERNAME --password-stdin || exit 1
          docker push $DOCKER_USERNAME/$DOCKER_REPO:$IMAGE_TAG
          docker tag $DOCKER_USERNAME/$DOCKER_REPO:$IMAGE_TAG $DOCKER_USERNAME/$DOCKER_REPO:latest
          docker push $DOCKER_USERNAME/$DOCKER_REPO:latest

      # Step 7: Update Kubernetes deployment file with new image tag
    - name: Update Kubernetes Deployment
      run: |
       sed -i "s|image: $DOCKER_USERNAME/$DOCKER_REPO:.*|image: $DOCKER_USERNAME/$DOCKER_REPO:$IMAGE_TAG|g" $KUBERNETES_DEPLOYMENT_FILE
       git config --global user.name "slax508"
       git config --global user.email "sankulaxman1998@gmail.com"
       # Ensure the Kubernetes deployment file is staged
       git add $KUBERNETES_DEPLOYMENT_FILE
       # Check if there are changes to commit
       if git diff-index --quiet HEAD --; then
      echo "No changes to commit."
      else
        git commit -m "Update deployment image to $DOCKER_USERNAME/$DOCKER_REPO:$IMAGE_TAG"
        git push
   fi
